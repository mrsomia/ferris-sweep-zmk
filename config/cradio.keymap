// COPYRIGHT (C) 2022 THE ZMK CONTRIBUTORS
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

// Home row mods macro

#define HRML(k1,k2,k3,k4) &ht LGUI k1  &ht LALT k2  &ht LCTRL k3  &ht LSHFT k4
#define HRMR(k1,k2,k3,k4) &ht RSHFT k1  &ht RCTRL k2  &ht RALT k3  &ht RGUI k4

// Layer definitions

#define BASE 0
#define NUM 1
#define SYM 2
#define FNC 3
#define NAV 4
#define MEDIA 5
#define SETTINGS 6

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };

        // poistional holds for shift cmd and alt

        lht: hold_tap_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <120>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <100>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 32 33>;
            bindings = <&kp>, <&kp>;
        };

        // poistional holds for shift cmd and alt

        rht: hold_tap_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <120>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <100>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31>;
            bindings = <&kp>, <&kp>;
        };

        caps: shift_caps {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&caps_word>, <&kp CAPS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        tdboot: tap_dance_boot {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <500>;
            bindings = <&none>, <&bootloader>;
        };

        tdreset: tap_dance_reset {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <500>;
            bindings = <&none>, <&sys_reset>;
        };

        rlt: repeat_layer_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "Repeat_layer_toggle";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&lt 6 ESC>;
        };

        combo_delete {
            bindings = <&lt 3 DEL>;
            key-positions = <32 33>;
        };
    };

    //  conditional_layers {
    //      compatible = "zmk,conditional-layers";
    //      tri_layer {
    //          if-layers = <1 2>;
    //          then-layer = <3>;
    //      };
    //  };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp Q       &kp W       &kp E        &kp R         &kp T           &kp Y             &kp U         &kp I        &kp O       &kp P
&ht LGUI A  &ht LALT S  &ht LCTRL D  &lht LSHFT F  &kp G           &kp H             &rht RSHFT J  &ht RCTRL K  &ht RALT L  &ht RGUI SQT
&kp Z       &kp X       &kp C        &kp V         &kp B           &kp N             &kp M         &kp COMMA    &kp DOT     &kp FSLH
                                     &lt 5 TAB     &rlt 4 SPACE    &rlt 1 BACKSPACE  &lt 2 ENTER
            >;
        };

        num {
            bindings = <
&kp LBKT   &kp N7  &kp N8  &kp N9     &kp RBKT     &trans   &trans     &trans     &trans    &tdreset
&kp SEMI   &kp N4  &kp N5  &kp N6     &kp EQUAL    &kp DOT  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
&kp GRAVE  &kp N1  &kp N2  &kp N3     &kp BSLH     &trans   &trans     &trans     &trans    &tdboot
                           &kp MINUS  &kp N0       &trans   &trans
            >;
        };

        symbols {
            bindings = <
&kp LBRC   &kp AMPS    &kp ASTRK  &kp LPAR   &kp RBRC    &trans   &trans     &trans     &trans    &tdreset
&kp COLON  &kp DOLLAR  &kp PRCNT  &kp CARET  &kp PLUS    &kp DOT  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
&kp TILDE  &kp EXCL    &kp AT     &kp HASH   &kp PIPE    &trans   &trans     &trans     &trans    &tdboot
                                  &kp UNDER  &kp RPAR    &trans   &trans
            >;
        };

        func {
            bindings = <
&kp F12  &kp F7  &kp F8  &kp F9  &kp PRINTSCREEN    &trans  &trans     &trans     &trans    &tdreset
&kp F11  &kp F4  &kp F5  &kp F6  &none              &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
&kp F10  &kp F1  &kp F2  &kp F3  &none              &trans  &trans     &trans     &trans    &tdboot
                         &none   &none              &trans  &trans
            >;
        };

        nav {
            bindings = <
&tdreset  &trans    &trans     &trans     &trans           &trans     &kp LG(Z)  &kp LS(LG(Z))  &trans     &caps
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &kp BACKSPACE    &kp LEFT   &kp DOWN   &kp UP         &kp RIGHT  &kp ESC
&tdboot   &trans    &trans     &trans     &trans           &kp HOME   &kp PG_DN  &kp PG_UP      &kp END    &caps
                               &none      &none            &kp SPACE  &kp ENTER
            >;
        };

        media {
            bindings = <
&tdreset  &trans    &trans     &trans     &trans           &bt BT_SEL 0   &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3   &bt BT_CLR
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &kp BACKSPACE    &kp C_BRI_DEC  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_BRI_INC  &kp ESC
&tdboot   &trans    &trans     &trans     &trans           &out OUT_TOG   &kp C_PREV    &kp C_PP      &kp C_NEXT     &caps
                               &none      &none            &kp SPACE      &kp ENTER
            >;
        };

        settings {
            bindings = <
&tdreset  &trans    &trans     &trans     &trans    &trans        &trans        &trans        &trans        &trans
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &none         &kp C_PREV    &kp C_PP      &kp C_NEXT    &kp ESC
&tdboot   &trans    &trans     &trans     &trans    &kp C_BRI_UP  &kp C_VOL_UP  &kp C_VOL_DN  &kp C_BRI_DN  &caps
                               &none      &none     &trans        &trans
            >;
        };
    };
};
